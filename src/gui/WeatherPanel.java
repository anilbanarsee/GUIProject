/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.util.ArrayList;
import javax.swing.Scrollable;

/**
 *
 * @author User
 */
public class WeatherPanel extends javax.swing.JPanel implements Scrollable{
    ArrayList<HourWeatherSubPanel> components;
    /**
     * Creates new form WeatherPanel
     */
    public WeatherPanel() {
        components = new ArrayList<>();
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        hourWeatherSubPanel1 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel2 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel3 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel4 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel5 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel6 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel7 = new gui.HourWeatherSubPanel();
        hourWeatherSubPanel8 = new gui.HourWeatherSubPanel();

        setLayout(new java.awt.GridBagLayout());

        hourWeatherSubPanel1.setTimeText(0);
        components.add(hourWeatherSubPanel1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel1, gridBagConstraints);

        hourWeatherSubPanel2.setTimeText(180);
        components.add(hourWeatherSubPanel2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel2, gridBagConstraints);

        hourWeatherSubPanel3.setTimeText(360);
        components.add(hourWeatherSubPanel3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel3, gridBagConstraints);

        hourWeatherSubPanel4.setTimeText(540);
        components.add(hourWeatherSubPanel4);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel4, gridBagConstraints);

        hourWeatherSubPanel5.setTimeText(720);
        components.add(hourWeatherSubPanel5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel5, gridBagConstraints);

        hourWeatherSubPanel6.setTimeText(900);
        components.add(hourWeatherSubPanel6);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel6, gridBagConstraints);

        hourWeatherSubPanel7.setTimeText(1080);
        components.add(hourWeatherSubPanel7);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel7, gridBagConstraints);

        hourWeatherSubPanel8.setTimeText(1260);
        components.add(hourWeatherSubPanel8);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(hourWeatherSubPanel8, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.HourWeatherSubPanel hourWeatherSubPanel1;
    private gui.HourWeatherSubPanel hourWeatherSubPanel2;
    private gui.HourWeatherSubPanel hourWeatherSubPanel3;
    private gui.HourWeatherSubPanel hourWeatherSubPanel4;
    private gui.HourWeatherSubPanel hourWeatherSubPanel5;
    private gui.HourWeatherSubPanel hourWeatherSubPanel6;
    private gui.HourWeatherSubPanel hourWeatherSubPanel7;
    private gui.HourWeatherSubPanel hourWeatherSubPanel8;
    // End of variables declaration//GEN-END:variables

    public void setColour(Color c){
        for(HourWeatherSubPanel subPanel: components){
            subPanel.setColour(c);
        }
    }
    @Override
    public Dimension getPreferredScrollableViewportSize() {
         return new Dimension(50,50);
    }

    @Override
    public int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction) {
        return 100;
    }

    @Override
    public int getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction) {
        return 100;
    }

    @Override
    public boolean getScrollableTracksViewportWidth() {
        return true;
    }

    @Override
    public boolean getScrollableTracksViewportHeight() {
        return true;
    }
}
